


name: hotelbooking app build and deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    environment:
        name: Production #This is the name of the environment list set for testing on github environment
    
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        # with:
        #   node-version: '18'

      # Install dependencies Frontend
      - name: Install dependencies 
        run: |
          cd frontend
          npm install
          npm run build

      # Install dependencies Backend
      - name: Install dependencies 
        run: |
          cd backend
          npm install

            # # Run tests
      - name: Run tests
        run: echo "Running tests bidyutkumar" 
          # cd frontend
          # npm test    

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    


      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          tags: ${{ secrets.DOCKER_USERNAME }}/hotelbooking:latest
          push: true
    




  deploy: # Job name
      environment:
         name: Production  #This is the name of the environment list set for testing on github environment

      runs-on: ubuntu-latest
      needs: [build] # This Deploy job will start when the build job is completed.
      steps:
          - name: Deploy to Render # github-marketplace (Render.com Deploy)
            uses: ttskch/render-deploy@v1.0.0
            with:
              api-key: ${{ secrets.RENDER_API_KEY }}
              service-id: ${{ secrets.RENDER_SERVICE_ID }}




 
# //rnd_309Pj3yBTzPRlla7Ml05yyjFKpYf











































# name: Frontend CI/CD

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build-test-dockerize:
#     environment:
#         name: Production #This is the name of the environment list set for testing on github environment
    
#     runs-on: ubuntu-latest
#     services:
#       mongo:
#         image: mongo:6.0
#         ports:
#           - 27017:27017
#         options: >-
#           --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'" 
#           --health-interval=10s 
#           --health-timeout=5s 
#           --health-retries=3
#     steps:
#       # Checkout the repository
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Set up Node.js
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         # with:
#         #   node-version: '18'

#       # Install dependencies Frontend
#       - name: Install dependencies 
#         run: |
#           cd frontend
#           npm install

#       # Install dependencies Backend
#       - name: Install dependencies 
#         run: |
#           cd backend
#           npm install

#             # # Run tests
#       - name: Run tests
#         run: echo "Running tests bidyutkumar" 
#           # cd frontend
#           # npm test    

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#             username: ${{ secrets.DOCKER_USERNAME }}
#             password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
    
    
        
#       - name: Build and push
#         uses: docker/build-push-action@v6
#         with:
#             # context: ./frontend
#             context: ./frontend
#             # file: ./frontend/Dockerfile
#             file: ./frontend/Dockerfile
#             tags: ${{ secrets.DOCKER_USERNAME }}/hotelbooking-frontend:latest
#             push: true

#       - name: Build and push
#         uses: docker/build-push-action@v6
#         with:
#           # context: ./frontend
#           context: ./backend
#           # file: ./frontend/Dockerfile
#           file: ./backend/Dockerfile
#           tags: ${{ secrets.DOCKER_USERNAME }}/hotelbooking-backend:latest
#           push: true
    



      # # Run tests
      # - name: Run tests
      #   run: |
      #     # cd frontend
      #     # npm test
